#!/usr/bin/env bash

set -e

help() {
  echo -e "Usage: $0 [OPTIONS]"
  echo -e ""
  echo -e "Create a tag off of main and push it to origin."
  echo -e ""
  echo -e "Note: This assumes that you have access to push to GitHub."
  echo -e "      If a tag already exists for the specified name, then this script will fail."
  echo -e ""
  echo -e "Options:"
  echo -e ""
  echo -e "  -h \t Print this message. All other options will be ignored if this is included."
  echo -e "  -d \t Do a dry run."
  echo -e ""
  echo -e "Examples:"
  echo -e "  > $0"
  echo -e ""
  echo -e "  This will:"
  echo -e "    1) Do a fetch from 'origin'."
  echo -e "    2) Create a tag 'vX.Y.Z' off of 'origin/main'."
  echo -e "    3) Push this tag to origin (GitHub)."
  echo -e ""
  echo -e "  > $0 -d"
  echo -e ""
  echo -e "  This will"
  echo -e "    1) Do a fetch from 'origin'."
  echo -e "    2) Create a tag 'vX.Y.Z' off of 'origin/main'."
  echo -e "    3) Stop. This will not push to GitHub as it is a 'dry run'."
  echo -e ""
}

DRY_RUN="no"

while getopts ":hdc:b:" opt; do
  case $opt in
    h)
      help
      exit 0
      ;;
    d)
      DRY_RUN="yes"
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      echo ""
      help
      exit 1
  esac
done

ensure_git_is_installed() {
  command -v git >/dev/null 2>&1 || { echo >&2 "You need have the 'git' command installed in order to continue.  Aborting."; exit 1; }
}

fetch_origin() {
  echo "Fetching origin..."
  git fetch origin
}

ensure_tag_is_new() {
  TAG=$1

  if [[ $(git tag | grep "${VERSION}") ]]; then
    echo >&2 "There is already a tag named ${VERSION}. You may need to update package.json with a new version. Aborting."; exit 1; 
  fi
}

create_tag() {
  TAG=$1

  echo "Creating Tag ${VERSION}..."
  git tag ${VERSION}
}

push_to_origin() {
  DRY_RUN=$1
  TAG=$2

  if [[ "$DRY_RUN" == "no" ]]; then
    echo "Pushing ${TAG} to origin"
    git push -u origin $TAG
  else
    echo "(not pushing $TAG to origin since this is a dry run)"
  fi
}

checkout_main() {
  echo "Checking out origin/main. To restore use 'git switch -'"
  git checkout origin/main
}

if [[ "$DRY_RUN" == "yes" ]]; then
  echo "Doing a dry run..."
  echo ""
fi

ensure_git_is_installed
fetch_origin
checkout_main

VERSION=v$(npm pkg get version | tr -d \")
echo "Preparing to create tag ${VERSION}"

ensure_tag_is_new $VERSION

create_tag $VERSION
push_to_origin $DRY_RUN $VERSION

if [[ "$DRY_RUN" == "no" ]]; then
  echo "To deploy, visit https://github.com/zer0-os/zOS/releases/new and create a release for ${VERSION}"
fi